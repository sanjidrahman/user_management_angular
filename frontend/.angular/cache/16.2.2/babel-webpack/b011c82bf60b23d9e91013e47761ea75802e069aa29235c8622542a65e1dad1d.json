{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class TestInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    let common = 'http://localhost:4000/';\n    console.log(request);\n    let url = request.clone({\n      url: common + request\n    });\n    return next.handle(request);\n  }\n}\n_class = TestInterceptor;\n_class.ɵfac = function TestInterceptor_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["TestInterceptor","constructor","intercept","request","next","common","console","log","url","clone","handle","factory","ɵfac"],"sources":["/Users/apple/Desktop/VS Project/Week 19/user_management/frontend/src/app/test.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TestInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let common = 'http://localhost:4000/'\n    console.log(request);\n    let url = request.clone({\n      url : common+request\n    })\n    return next.handle(request);\n  }\n}\n"],"mappings":";;AAUA,OAAM,MAAOA,eAAe;EAE1BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAIC,MAAM,GAAG,wBAAwB;IACrCC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;IACpB,IAAIK,GAAG,GAAGL,OAAO,CAACM,KAAK,CAAC;MACtBD,GAAG,EAAGH,MAAM,GAACF;KACd,CAAC;IACF,OAAOC,IAAI,CAACM,MAAM,CAACP,OAAO,CAAC;EAC7B;;SAXWH,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAW,OAAA,EAAfX,MAAe,CAAAY;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}