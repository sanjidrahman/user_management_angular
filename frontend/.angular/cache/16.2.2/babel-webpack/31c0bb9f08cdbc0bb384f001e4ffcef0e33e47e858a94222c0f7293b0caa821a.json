{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class TestInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    let common = 'http://localhost:4000/';\n    return next.handle(request);\n    let newUrl = request.clone({\n      url: common + request.url\n    });\n  }\n}\n_class = TestInterceptor;\n_class.ɵfac = function TestInterceptor_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["TestInterceptor","constructor","intercept","request","next","common","handle","newUrl","clone","url","factory","ɵfac"],"sources":["/Users/apple/Desktop/VS Project/Week 19/user_management/frontend/src/app/test.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TestInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let common = 'http://localhost:4000/'\n    return next.handle(request);\n    let newUrl = request.clone({\n      url : common+request.url\n    })\n  }\n}\n"],"mappings":";;AAUA,OAAM,MAAOA,eAAe;EAE1BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAIC,MAAM,GAAG,wBAAwB;IACrC,OAAOD,IAAI,CAACE,MAAM,CAACH,OAAO,CAAC;IAC3B,IAAII,MAAM,GAAGJ,OAAO,CAACK,KAAK,CAAC;MACzBC,GAAG,EAAGJ,MAAM,GAACF,OAAO,CAACM;KACtB,CAAC;EACJ;;SAVWT,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAU,OAAA,EAAfV,MAAe,CAAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}