{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class TestInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    let common = 'http://localhost:4000/';\n    let newUrl = request.clone({\n      url: common + request.url\n    });\n    console.log();\n    return next.handle(request);\n  }\n}\n_class = TestInterceptor;\n_class.ɵfac = function TestInterceptor_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["TestInterceptor","constructor","intercept","request","next","common","newUrl","clone","url","console","log","handle","factory","ɵfac"],"sources":["/Users/apple/Desktop/VS Project/Week 19/user_management/frontend/src/app/test.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TestInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let common = 'http://localhost:4000/'\n    let newUrl = request.clone({\n      url : common+request.url\n    })\n    console.log();\n    return next.handle(request);\n    \n  }\n}\n"],"mappings":";;AAUA,OAAM,MAAOA,eAAe;EAE1BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAIC,MAAM,GAAG,wBAAwB;IACrC,IAAIC,MAAM,GAAGH,OAAO,CAACI,KAAK,CAAC;MACzBC,GAAG,EAAGH,MAAM,GAACF,OAAO,CAACK;KACtB,CAAC;IACFC,OAAO,CAACC,GAAG,EAAE;IACb,OAAON,IAAI,CAACO,MAAM,CAACR,OAAO,CAAC;EAE7B;;SAZWH,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAY,OAAA,EAAfZ,MAAe,CAAAa;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}