{"ast":null,"code":"var _class;\nimport { createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap } from \"rxjs\";\nimport { retrieveUser, retrieveUserProfile, retrieveUserProfileSuccess, retrieveUserSuccess } from \"./app.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/service/user-services.service\";\nexport class appEffects {\n  constructor(actions$, service) {\n    this.actions$ = actions$;\n    this.service = service;\n    this.loadAllUsers$ = createEffect(() => this.actions$.pipe(ofType(retrieveUser), switchMap(() => {\n      return this.service.getAllUser().pipe(map(data => retrieveUserSuccess({\n        allUsers: data\n      })));\n    })));\n    this.loadProfile$ = createEffect(() => this.actions$.pipe(ofType(retrieveUserProfile), switchMap(() => {\n      return this.service.loadProfile().pipe(map(data => retrieveUserProfileSuccess({\n        userProfile: data\n      })));\n    })));\n  }\n}\n_class = appEffects;\n_class.ɵfac = function appEffects_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UserServicesService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["createEffect","ofType","map","switchMap","retrieveUser","retrieveUserProfile","retrieveUserProfileSuccess","retrieveUserSuccess","appEffects","constructor","actions$","service","loadAllUsers$","pipe","getAllUser","data","allUsers","loadProfile$","loadProfile","userProfile","i0","ɵɵinject","i1","Actions","i2","UserServicesService","factory","ɵfac"],"sources":["/Users/apple/Desktop/VS Project/Week 19/user_management/frontend/src/app/component/state/app.effects.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap } from \"rxjs\";\nimport { UserServicesService } from \"src/app/service/user-services.service\";\nimport { Users } from \"../models/app.models\";\nimport { retrieveUser, retrieveUserProfile, retrieveUserProfileSuccess, retrieveUserSuccess } from \"./app.actions\";\n\n@Injectable()\nexport class appEffects {\n\n    constructor(\n        private actions$: Actions,\n        private service: UserServicesService\n    ) { }\n\n    loadAllUsers$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(retrieveUser),\n            switchMap(() => {\n                return this.service.getAllUser()\n                    .pipe(map((data) => retrieveUserSuccess({ allUsers: data as Users[] })))\n            })\n        )\n    )\n\n    loadProfile$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(retrieveUserProfile),\n            switchMap(() => {\n                return this.service.loadProfile()\n                    .pipe(map((data) => retrieveUserProfileSuccess({ userProfile: data as Users })))\n            })\n        )\n    )\n\n}"],"mappings":";AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,GAAG,EAAEC,SAAS,QAAQ,MAAM;AAGrC,SAASC,YAAY,EAAEC,mBAAmB,EAAEC,0BAA0B,EAAEC,mBAAmB,QAAQ,eAAe;;;;AAGlH,OAAM,MAAOC,UAAU;EAEnBC,YACYC,QAAiB,EACjBC,OAA4B;IAD5B,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,OAAO,GAAPA,OAAO;IAGnB,KAAAC,aAAa,GAAGZ,YAAY,CAAC,MACzB,IAAI,CAACU,QAAQ,CAACG,IAAI,CACdZ,MAAM,CAACG,YAAY,CAAC,EACpBD,SAAS,CAAC,MAAK;MACX,OAAO,IAAI,CAACQ,OAAO,CAACG,UAAU,EAAE,CAC3BD,IAAI,CAACX,GAAG,CAAEa,IAAI,IAAKR,mBAAmB,CAAC;QAAES,QAAQ,EAAED;MAAe,CAAE,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC,CACL,CACJ;IAED,KAAAE,YAAY,GAAGjB,YAAY,CAAC,MACxB,IAAI,CAACU,QAAQ,CAACG,IAAI,CACdZ,MAAM,CAACI,mBAAmB,CAAC,EAC3BF,SAAS,CAAC,MAAK;MACX,OAAO,IAAI,CAACQ,OAAO,CAACO,WAAW,EAAE,CAC5BL,IAAI,CAACX,GAAG,CAAEa,IAAI,IAAKT,0BAA0B,CAAC;QAAEa,WAAW,EAAEJ;MAAa,CAAE,CAAC,CAAC,CAAC;IACxF,CAAC,CAAC,CACL,CACJ;EApBG;;SALKP,UAAU;;mBAAVA,MAAU,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;;SAAVjB,MAAU;EAAAkB,OAAA,EAAVlB,MAAU,CAAAmB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}